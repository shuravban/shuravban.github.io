---
layout: post
title:  Первый бот и чуть-чуть о mail
date:   2017-09-03 22:09:00 +03
tags:   linux twitter shell
---

Ну, как-бы, до бота этому скрипту еще далеко - звание "бот" еще заслужить надо.Но шаг в правильном направлении. 

Есть у меня подборка осенних фотографий, как-раз чуть добавить и будет 90. Идея постить каждое утро по фотографии с хэштегом "Осень". Для этого в Линуксе есть проверенный механизм - демон cron, позволяющий выполнять периодические задачи. Проблема в том, что этот демон рассчитан на постоянно работающий компьютер (сервер), а у меня с утра могут быть и другие дела. Еще и тупо интернета может не быть.

Более-менее (скорее менее) стандартным решением для выполнения задачи при включении (выходе из спящего, ждущего) режимов является anacron, который при ближайшем рассмотрении был отвергнут. Оказался костылем, рассчитанным на выполнение системных задач.

Придуман такой алгоритм. В таблице задач cron-а ставим выполнение скрипта ежечасно, начиная с 8 утра до 21 часа. Важно - задачи выполняются в "голом" окружении, в частности, в PATH не было `/usr/local/bin`. Поэтому все переменные надо прописывать. Содержание моей таблицы (crontab -e) для этой задачи:

    PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin

    0 8-21 * * * /home/ХХХ/proj/tw/autumn/post-autumn-pic

Скрипт, если был выполнен, ставит метку дня в файле, которую и проверяет при каждом запуске. Если в этот день уже был выполнен, то немедленный выход. Если запостить (постим с помощью `t`) не удается, то выполняем попытку через минуту, три, пять. Не получается - вываливаемся и ждем следующего часа, когда cron запустит повторно.

Как написал скрипт мне понравилось. На шелл. Засунул в bin сюда как образец. Дальше буду развивать и навешивать разными плюшками. До сегодняшнего дня вроде бы нормально проработал на тестовых прогонах, с завтрашнего дня пару дней на экспериментальном аккаунте, а потом в "продакшн".

Mail
----

Cron вывод задачи, если он есть, посылает на почту, которую еще надо настроить. Имеется в виду старая (очень старая) командная `mail`. Ее предоставляют три пакета (альтернативные реализации) - bsd-mailx, mailutils (GNU) и s-nail. Первый - минимальный, вторые два - с большим количеством фич, которые, в нынешний век, уже вряд ли кому-то нужны.

При установке автоматически настраивается на пересылку только внутри компьютера. Для отправки почты из командной строки есть куча туториалов. Главное: а) поднимать свой почтовый сервер, даже имея свой сайт на выделенном сервере, не имеет большого смысла - удобнее пользоваться сторонними решениями. б) для персонального пользования - лучше gmail вряд-ли что-то можно найти, в) настройка gmail в качестве сервера для отправки прошла легко, единственное, в настройках gmail на Гугле надо предоставить доступ "небезопасным" сторонним приложениям (как-то так).

Читать же почту из командной строки - надо настроить терминальный клиент - `mutt` или `alpine`. Для использования в командной строки лучше использовать Google API, в котором я, по причине отсутствия потребности, не стал копаться. Единственно нашел, что с помощью `curl` очень легко получать заголовки непрочитанных сообщений.
